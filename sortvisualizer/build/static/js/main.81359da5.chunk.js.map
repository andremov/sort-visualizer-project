{"version":3,"sources":["Header.js","Visualizer.js","MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","Visualizer","state","array","currentProcess","scrambleData","indexA","indexB","bubbleSortData","pass","index","swapsDone","doProcess","length","checking","scramble","setState","bubble","bubble2","doScramble","doBubbleSort","doBubble2Sort","scrambleIterative","i","min","max","valueA","value","shuffleIndex","getRndInteger","valueB","data","push","this","setInterval","Math","floor","random","map","item","key","style","height","onClick","MainComponent","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.81359da5.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className='header'>\r\n                <span className='title'> Sort Visualizer </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nexport class Visualizer extends Component {\r\n\r\n    state = {\r\n        array : [],\r\n        currentProcess : '',\r\n        scrambleData : {\r\n            indexA : -1,\r\n            indexB : -1\r\n        },\r\n        bubbleSortData : {\r\n            pass : 0,\r\n            index : -1,\r\n            swapsDone : -1\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        let maxValue = 100;\r\n        let array = [];\r\n        for (let i = 0; i < maxValue; i++) {\r\n            array.push({\r\n                value : i+1,\r\n                checking : false\r\n            });\r\n        }\r\n\r\n        this.setState({array});\r\n        setInterval(this.doProcess,10);\r\n    }\r\n\r\n    doProcess = () => {\r\n        let {currentProcess} = this.state;\r\n        if (currentProcess === 'scramble') {\r\n            let {array, scrambleData} = this.state;\r\n\r\n            if (scrambleData.indexA === array.length-1) {\r\n                currentProcess = '';\r\n\r\n                array[scrambleData.indexB].checking = false;\r\n                array[scrambleData.indexA].checking = false;\r\n\r\n                scrambleData.indexA = -1;\r\n                scrambleData.indexB = -1;\r\n            } else {\r\n                this.scramble(array, scrambleData);\r\n            }\r\n\r\n            this.setState({array, currentProcess, scrambleData});\r\n        } else if (currentProcess === 'bubble') {\r\n            let {array, bubbleSortData} = this.state;\r\n\r\n            if (bubbleSortData.swapsDone === 0 && bubbleSortData.index >= array.length-2) {\r\n                currentProcess = '';\r\n\r\n                array[bubbleSortData.index].checking = false;\r\n                array[bubbleSortData.index+1].checking = false;\r\n\r\n                bubbleSortData.index = -1;\r\n                bubbleSortData.swapsDone = -1;\r\n                bubbleSortData.pass = 0;\r\n            } else {\r\n                this.bubble(array, bubbleSortData);\r\n            }\r\n\r\n            this.setState({array, currentProcess, bubbleSortData});\r\n        }else if (currentProcess === 'bubble2') {\r\n            let {array, bubbleSortData} = this.state;\r\n\r\n            if (bubbleSortData.swapsDone === 0 && bubbleSortData.index >= array.length-2-bubbleSortData.pass) {\r\n                currentProcess = '';\r\n\r\n                array[bubbleSortData.index].checking = false;\r\n                array[bubbleSortData.index+1].checking = false;\r\n\r\n                bubbleSortData.index = -1;\r\n                bubbleSortData.swapsDone = -1;\r\n                bubbleSortData.pass = 0;\r\n            } else {\r\n                this.bubble2(array, bubbleSortData);\r\n            }\r\n\r\n            this.setState({array, currentProcess, bubbleSortData});\r\n        }\r\n    };\r\n\r\n    doScramble = () => {\r\n        let {currentProcess} = this.state;\r\n\r\n        currentProcess = 'scramble';\r\n\r\n        this.setState({currentProcess});\r\n    };\r\n\r\n    doBubbleSort = () => {\r\n        let {currentProcess} = this.state;\r\n\r\n        currentProcess = 'bubble';\r\n\r\n        this.setState({currentProcess});\r\n    };\r\n\r\n    doBubble2Sort = () => {\r\n        let {currentProcess} = this.state;\r\n\r\n        currentProcess = 'bubble2';\r\n\r\n        this.setState({currentProcess});\r\n    };\r\n\r\n    getRndInteger(min, max) {\r\n        return Math.floor(Math.random() * (max - min) ) + min;\r\n    }\r\n\r\n    scrambleIterative = (array) => {\r\n        for (let i = 0; i < array.length; i++) {\r\n            let min = i+1;\r\n            let max = array.length-1;\r\n\r\n            let valueA = array[i].value;\r\n            let shuffleIndex = this.getRndInteger(min,max);\r\n\r\n            let valueB = array[shuffleIndex].value;\r\n\r\n            array[shuffleIndex].value = valueA;\r\n            array[i].value = valueB;\r\n        }\r\n    };\r\n\r\n    scramble = (array, data) => {\r\n\r\n        if (data.indexA !== -1) {\r\n            array[data.indexB].checking = false;\r\n            array[data.indexA].checking = false;\r\n        }\r\n\r\n        data.indexA ++;\r\n\r\n        let min = data.indexA;\r\n        let max = array.length-1;\r\n\r\n        let valueA = array[data.indexA].value;\r\n        data.indexB = this.getRndInteger(min,max);\r\n\r\n        let valueB = array[data.indexB].value;\r\n\r\n        array[data.indexB].value = valueA;\r\n        array[data.indexB].checking = true;\r\n        array[data.indexA].value = valueB;\r\n        array[data.indexA].checking = true;\r\n\r\n    };\r\n\r\n    bubble = (array, data) => {\r\n\r\n        if (data.index !== -1) {\r\n            array[data.index].checking = false;\r\n            array[data.index+1].checking = false;\r\n        }\r\n\r\n        data.index ++;\r\n\r\n        if (data.index >= array.length-1) {\r\n            data.index = 0;\r\n            data.swapsDone = 0;\r\n            data.pass ++;\r\n        }\r\n\r\n        let valueA = array[data.index].value;\r\n        let valueB = array[data.index+1].value;\r\n\r\n        array[data.index].checking = true;\r\n        array[data.index+1].checking = true;\r\n\r\n        if (valueA > valueB) {\r\n            data.swapsDone ++;\r\n            array[data.index + 1].value = valueA;\r\n            array[data.index].value = valueB;\r\n        }\r\n    };\r\n\r\n    bubble2 = (array, data) => {\r\n\r\n        if (data.index !== -1) {\r\n            array[data.index].checking = false;\r\n            array[data.index+1].checking = false;\r\n        }\r\n\r\n        data.index ++;\r\n\r\n        if (data.index >= array.length-1-data.pass) {\r\n            data.index = 0;\r\n            data.swapsDone = 0;\r\n            data.pass ++;\r\n        }\r\n\r\n        let valueA = array[data.index].value;\r\n        let valueB = array[data.index+1].value;\r\n\r\n        array[data.index].checking = true;\r\n        array[data.index+1].checking = true;\r\n\r\n        if (valueA > valueB) {\r\n            data.swapsDone ++;\r\n            array[data.index + 1].value = valueA;\r\n            array[data.index].value = valueB;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {array} = this.state;\r\n\r\n\r\n        return (\r\n            <div className='view'>\r\n\r\n                <div className='graph'>\r\n                    {array.map(item => {return(\r\n                        <div key={item.value} className='bar'>\r\n                            <div style={{height: (item.value*2)+'px' }} className={'value '+(item.checking?'selected':'')}>\r\n                            </div>\r\n                        </div>\r\n                    )})}\r\n                </div>\r\n\r\n                <div className='panel'>\r\n                    <div className='btn' onClick={this.doScramble}>\r\n                        Scramble\r\n                    </div>\r\n                    <div className='btn' onClick={this.doBubbleSort}>\r\n                        Bubble\r\n                    </div>\r\n                    <div className='btn' onClick={this.doBubble2Sort}>\r\n                        Bubble2\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Header} from \"./Header\";\r\nimport {Visualizer} from \"./Visualizer\";\r\n\r\nexport class MainComponent extends Component {\r\n    render() {\r\n        return (\r\n            <div className='app'>\r\n                <Header/>\r\n                <Visualizer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.scss';\nimport {MainComponent} from \"./MainComponent\";\n\nfunction App() {\n  return (\n    <MainComponent />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}